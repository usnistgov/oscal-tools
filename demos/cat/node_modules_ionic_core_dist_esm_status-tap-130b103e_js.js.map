{"version":3,"file":"node_modules_ionic_core_dist_esm_status-tap-130b103e_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,cAAc,GAAG,MAAM;AAC3B,QAAMC,GAAG,GAAGC,MAAZ;AACAD,EAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkC,MAAM;AACtCV,IAAAA,qDAAQ,CAAC,MAAM;AACb,YAAMW,KAAK,GAAGH,GAAG,CAACI,UAAlB;AACA,YAAMC,MAAM,GAAGL,GAAG,CAACM,WAAnB;AACA,YAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAAT,CAA0BN,KAAK,GAAG,CAAlC,EAAqCE,MAAM,GAAG,CAA9C,CAAX;;AACA,UAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,YAAMG,SAAS,GAAGf,qDAAqB,CAACY,EAAD,CAAvC;;AACA,UAAIG,SAAJ,EAAe;AACb,YAAIC,OAAJ,CAAaC,OAAD,IAAad,uDAAgB,CAACY,SAAD,EAAYE,OAAZ,CAAzC,EAA+DC,IAA/D,CAAoE,MAAM;AACxEnB,UAAAA,qDAAS,+JAAC,aAAY;AACpB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYgB,YAAAA,SAAS,CAACI,KAAV,CAAgBC,WAAhB,CAA4B,YAA5B,EAA0C,QAA1C;AACA,kBAAMlB,qDAAW,CAACa,SAAD,EAAY,GAAZ,CAAjB;AACAA,YAAAA,SAAS,CAACI,KAAV,CAAgBE,cAAhB,CAA+B,YAA/B;AACD,WAXQ,EAAT;AAYD,SAbD;AAcD;AACF,KAxBO,CAAR;AAyBD,GA1BD;AA2BD,CA7BD","sources":["./node_modules/@ionic/core/dist/esm/status-tap-130b103e.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { f as readTask, c as writeTask } from './index-88bdeaae.js';\nimport { f as findClosestIonContent, s as scrollToTop } from './index-8bf9b0cd.js';\nimport { c as componentOnReady } from './helpers-4d272360.js';\nimport './index-9ac92660.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"],"names":["f","readTask","c","writeTask","findClosestIonContent","s","scrollToTop","componentOnReady","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","Promise","resolve","then","style","setProperty","removeProperty"],"sourceRoot":"webpack:///"}