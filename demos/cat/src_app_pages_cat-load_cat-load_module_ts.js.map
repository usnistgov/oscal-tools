{"version":3,"file":"src_app_pages_cat-load_cat-load_module_ts.js","mappings":"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","sources":["./src/app/pages/cat-load/cat-load-routing.module.ts","./src/app/pages/cat-load/cat-load.module.ts","./src/app/pages/cat-load/cat-load.page.ts","./src/app/pages/cat-load/cat-load.page.html"],"sourcesContent":["/*\n * Portions of this software was developed by employees of the National Institute\n * of Standards and Technology (NIST), an agency of the Federal Government and is\n * being made available as a public service. Pursuant to title 17 United States\n * Code Section 105, works of NIST employees are not subject to copyright\n * protection in the United States. This software may be subject to foreign\n * copyright. Permission in the United States and in foreign countries, to the\n * extent that NIST may hold copyright, to use, copy, modify, create derivative\n * works, and distribute this software and its documentation without fee is hereby\n * granted on a non-exclusive basis, provided that this notice and disclaimer\n * of warranty appears in all copies.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER\n * EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY\n * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM\n * INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE\n * SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE ERROR FREE.  IN NO EVENT\n * SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT,\n * INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM,\n * OR IN ANY WAY CONNECTED WITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY,\n * CONTRACT, TORT, OR OTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR\n * PROPERTY OR OTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT\n * OF THE RESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CatLoadPage } from './cat-load.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CatLoadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CatLoadPageRoutingModule {}\n","/*\n * Portions of this software was developed by employees of the National Institute\n * of Standards and Technology (NIST), an agency of the Federal Government and is\n * being made available as a public service. Pursuant to title 17 United States\n * Code Section 105, works of NIST employees are not subject to copyright\n * protection in the United States. This software may be subject to foreign\n * copyright. Permission in the United States and in foreign countries, to the\n * extent that NIST may hold copyright, to use, copy, modify, create derivative\n * works, and distribute this software and its documentation without fee is hereby\n * granted on a non-exclusive basis, provided that this notice and disclaimer\n * of warranty appears in all copies.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER\n * EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY\n * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM\n * INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE\n * SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE ERROR FREE.  IN NO EVENT\n * SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT,\n * INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM,\n * OR IN ANY WAY CONNECTED WITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY,\n * CONTRACT, TORT, OR OTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR\n * PROPERTY OR OTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT\n * OF THE RESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CatLoadPageRoutingModule } from './cat-load-routing.module';\n\nimport { CatLoadPage } from './cat-load.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CatLoadPageRoutingModule\n  ],\n  declarations: [CatLoadPage]\n})\nexport class CatLoadPageModule {}\n","/*\n * Portions of this software was developed by employees of the National Institute\n * of Standards and Technology (NIST), an agency of the Federal Government and is\n * being made available as a public service. Pursuant to title 17 United States\n * Code Section 105, works of NIST employees are not subject to copyright\n * protection in the United States. This software may be subject to foreign\n * copyright. Permission in the United States and in foreign countries, to the\n * extent that NIST may hold copyright, to use, copy, modify, create derivative\n * works, and distribute this software and its documentation without fee is hereby\n * granted on a non-exclusive basis, provided that this notice and disclaimer\n * of warranty appears in all copies.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER\n * EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY\n * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM\n * INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE\n * SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE ERROR FREE.  IN NO EVENT\n * SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT,\n * INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM,\n * OR IN ANY WAY CONNECTED WITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY,\n * CONTRACT, TORT, OR OTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR\n * PROPERTY OR OTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT\n * OF THE RESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Console, time } from 'console';\nimport { Catalog, Profile } from 'src/app/interfaces/oscal-types/oscal-catalog.types';\nimport { FilePullResult, OscalRemoteFile, OsFileOperations } from 'src/app/providers/app-state/state-nav-cat/os-files.service';\n\n@Component({\n  selector: 'app-cat-load',\n  templateUrl: './cat-load.page.html',\n  styleUrls: ['./cat-load.page.scss', './../stylePages.scss'],\n})\nexport class CatLoadPage implements OnInit {\n  fileToUpload: File | null = null;\n  isCatLoadDone = false;\n  recCatSchema = require('/src/assets/oscal-cats/json-schemas/oscal_catalog_schema.json');\n  recProSchema = require('/src/assets/oscal-cats/json-schemas/oscal_profile_schema.json');\n  catSchemaFromUrl: any;\n  proSchemaFromUrl: any;\n  // catSchema = require('https://raw.githubusercontent.com/usnistgov/OSCAL/main/json/schema/oscal_catalog_schema.json');\n  loadedCat: Catalog;\n  isProFromUrlLoadDone: boolean;\n  isProFromUrlLoadDoneDone: boolean;\n\n\n  constructor(\n    private catFiles: OscalRemoteFile<Catalog>,\n    private proFiles: OscalRemoteFile<Profile>,\n    private schemaFiles: OscalRemoteFile<any>\n  ) {\n    this.loadCatSchema();\n  }\n\n  ngOnInit() {\n  }\n\n\n  loadCatSchema() {\n    const url = 'https://raw.githubusercontent.com/usnistgov/OSCAL/main/json/schema/oscal_catalog_schema.json'\n    this.catFiles.getHttpEntity<any>(url)\n      .subscribe(\n        data => { this.getCatSchema(data); },\n        error => {// Process error\n          console.log(`Error reading URL:${url}:\\n\\t${error}`);\n          // Here fallback to the local resource\n          this.isCatLoadDone = false;\n        },\n        () => { // Complete operation\n          this.isProFromUrlLoadDoneDone = true;\n        }\n      );\n  }\n\n  getCatSchema(data: any) {\n    console.log(data);\n    console.log(`Loaded Schema`);\n    this.catSchemaFromUrl = data;\n    this.isProFromUrlLoadDone = true;\n  }\n\n\n  ionViewWillLeave(): void {\n    // About to leave tha page - MUST update the session object\n  }\n\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  handleFileInput($event: Event) {\n    // await this.delay(1000);\n    const filesElement = ($event.target as HTMLInputElement);\n    const files = filesElement.files;\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n    // this.fileOperations.uploadFileToSession(files);\n    console.log(`Getting the URL to load`);\n    const url = 'https://raw.githubusercontent.com/usnistgov/oscal-content/main/nist.gov/SP800-53/rev4/json/NIST_SP-800-53_rev4_catalog.json';\n    // this.fileOperations.getHttpFile(url);\n    // Implementing Observable to pull out catalog\n    /*    \n    this.fileOperations.getHttpCatalog(url)\n      .subscribe(\n        data => { // On next operation\n          console.log(data);\n          this.loadedCat = data;\n          // console.log(JSON.stringify(data));\n          this.isCatLoadDone = true;\n        },\n        error => {// Process error\n          console.log(`Error reading URL:${url}:\\n\\t${error}`);\n          // Here fallback to the local resource\n          this.isCatLoadDone = false;\n        },\n        () => { // Complete operation\n          this.isCatLoadDone = true;\n        }\n  \n      )\n    if (this.isCatLoadDone) {\n      console.log(`Schema validation: ${this.fileOperations.isObjectValid(this.loadedCat, this.catSchema)}`);\n    } */\n    // let catSchemaUrl = this.catFiles.getHttpEntity<any>('https://raw.githubusercontent.com/usnistgov/OSCAL/main/json/schema/oscal_catalog_schema.json');\n    // let proSchemaUrl = this.catFiles.getHttpEntity<any>('https://raw.githubusercontent.com/usnistgov/OSCAL/main/json/schema/oscal_profile_schema.json');\n\n    if (!!this.catSchemaFromUrl && this.isProFromUrlLoadDone && this.isProFromUrlLoadDoneDone) {\n      this.catFiles.loadRemoteEntity('---', url, '==='); //, this.catSchemaFromUrl , this.onDataReadyCallback\n      console.log(`Done?:${this.isProFromUrlLoadDone}\\t Done2x?:${this.isProFromUrlLoadDoneDone}`);\n    } else {\n      console.log(`Done?:${this.isProFromUrlLoadDone}\\t Done2x?:${this.isProFromUrlLoadDoneDone}`);\n    }\n  }\n\n  onDataReadyCallback<ResultType>(result: FilePullResult<ResultType>) {\n    console.log(result.resultEntity);\n    console.log(result.validationInfo);\n  }\n\n\n  validateSchema() {\n    if (this.isCatLoadDone) {\n      console.log(`Schema validation: ${this.catFiles.isObjectValid(this.loadedCat, this.catSchemaFromUrl)}`);\n    }\n  }\n\n  uploadFileToActivity() {\n    // this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\n    //   // do something, if upload success\n    // }, error => {\n    //   console.log(error);\n    // });\n  }\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Load Previously Saved File</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <div>\n    You can load your locally saved catalog snapshot to browser to continue the work you previously saved locally\n  </div>\n\n  <!--   <ion-button>\n    <ion-item>\n      <label for=\"file\">Choose File</label>\n      <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event.target.files)\">\n    </ion-item>\n  </ion-button>\n\n\n  <ion-button expand=\"full\">\n    <ion-icon lazy=\"true\" slot=\"start\" name=\"image\"></ion-icon>\n    <ion-label slot=\"end\">Upload Image</ion-label>\n    <ion-input type=\"file\" (change)=\"\"handleFileInput($event.target.files)\" id=\"file-input\" accept=\"image/png, image/jpeg\">\n    </ion-input>\n  </ion-button>\n -->\n\n  <ion-item>\n    <ion-button>\n      <label class=\"myFakeUploadButton\" for=\"myFileInput\">Choose File to Upload</label>\n      <input type=\"file\" id=\"myFileInput\" (change)=\"handleFileInput($event)\">\n    </ion-button>\n  </ion-item>\n\n  <ion-item>\n    <ion-button (click)=\"validateSchema()\">\n      <label>Validate Upload</label>\n    </ion-button>\n  </ion-item>\n\n\n\n\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}