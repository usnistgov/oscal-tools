{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, f as readTask, h, i as getElement, H as Host } from './index-88bdeaae.js';\nimport { b as getIonMode, c as config } from './ionic-global-00475c3a.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-8bf9b0cd.js';\nimport { s as sanitizeDOMString } from './index-dff497fb.js';\nimport './helpers-4d272360.js';\nimport './index-9ac92660.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n\nconst InfiniteScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.isLoading = false;\n    /**\n     * The threshold distance from the bottom\n     * of the content to call the `infinite` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     */\n    this.threshold = '15%';\n    /**\n     * If `true`, the infinite scroll will be hidden and scroll event listeners\n     * will be removed.\n     *\n     * Set this to true to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     */\n    this.disabled = false;\n    /**\n     * The position of the infinite scroll element.\n     * The value can be either `top` or `bottom`.\n     */\n    this.position = 'bottom';\n    this.onScroll = () => {\n      const scrollEl = this.scrollEl;\n      if (!scrollEl || !this.canStart()) {\n        return 1;\n      }\n      const infiniteHeight = this.el.offsetHeight;\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n      const scrollTop = scrollEl.scrollTop;\n      const scrollHeight = scrollEl.scrollHeight;\n      const height = scrollEl.offsetHeight;\n      const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n      const distanceFromInfinite = this.position === 'bottom'\n        ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n        : scrollTop - infiniteHeight - threshold;\n      if (distanceFromInfinite < 0) {\n        if (!this.didFire) {\n          this.isLoading = true;\n          this.didFire = true;\n          this.ionInfinite.emit();\n          return 3;\n        }\n      }\n      else {\n        this.didFire = false;\n      }\n      return 4;\n    };\n  }\n  thresholdChanged() {\n    const val = this.threshold;\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    }\n    else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  }\n  disabledChanged() {\n    const disabled = this.disabled;\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n    this.enableScrollEvents(!disabled);\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    this.scrollEl = await getScrollElement(contentEl);\n    this.thresholdChanged();\n    this.disabledChanged();\n    if (this.position === 'top') {\n      writeTask(() => {\n        if (this.scrollEl) {\n          this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n        }\n      });\n    }\n  }\n  disconnectedCallback() {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  }\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n  async complete() {\n    const scrollEl = this.scrollEl;\n    if (!this.isLoading || !scrollEl) {\n      return;\n    }\n    this.isLoading = false;\n    if (this.position === 'top') {\n      /**\n       * New content is being added at the top, but the scrollTop position stays the same,\n       * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n       * (Frame 1)\n       *    - complete() is called, but the UI hasn't had time to update yet.\n       *    - Save the current content dimensions.\n       *    - Wait for the next frame using _dom.read, so the UI will be updated.\n       * (Frame 2)\n       *    - Read the new content dimensions.\n       *    - Calculate the height difference and the new scroll position.\n       *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n       * (Still frame 2, if I'm correct)\n       *    - Change the scroll position (= visually maintain the scroll position).\n       *    - Change the state to re-enable the InfiniteScroll.\n       *    - This should be after changing the scroll position, or it could\n       *    cause the InfiniteScroll to be triggered again immediately.\n       * (Frame 3)\n       *    Done.\n       */\n      this.isBusy = true;\n      // ******** DOM READ ****************\n      // Save the current content dimensions before the UI updates\n      const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n      // ******** DOM READ ****************\n      requestAnimationFrame(() => {\n        readTask(() => {\n          // UI has updated, save the new content dimensions\n          const scrollHeight = scrollEl.scrollHeight;\n          // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n          const newScrollTop = scrollHeight - prev;\n          // ******** DOM WRITE ****************\n          requestAnimationFrame(() => {\n            writeTask(() => {\n              scrollEl.scrollTop = newScrollTop;\n              this.isBusy = false;\n            });\n          });\n        });\n      });\n    }\n  }\n  canStart() {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      }\n      else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const disabled = this.disabled;\n    return (h(Host, { class: {\n        [mode]: true,\n        'infinite-scroll-loading': this.isLoading,\n        'infinite-scroll-enabled': !disabled,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"threshold\": [\"thresholdChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nInfiniteScroll.style = infiniteScrollCss;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst InfiniteScrollContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true,\n      } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText && h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(this.loadingText) }))));\n  }\n};\nInfiniteScrollContent.style = {\n  ios: infiniteScrollContentIosCss,\n  md: infiniteScrollContentMdCss\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["r","registerInstance","e","createEvent","c","writeTask","f","readTask","h","i","getElement","H","Host","b","getIonMode","config","findClosestIonContent","p","printIonContentErrorMsg","g","getScrollElement","s","sanitizeDOMString","infiniteScrollCss","InfiniteScroll","constructor","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","distanceFromInfinite","emit","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","contentEl","clientHeight","disconnectedCallback","undefined","complete","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","class","watchers","style","infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","componentDidLoad","loadingSpinner","get","name","loadingText","innerHTML","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///"}