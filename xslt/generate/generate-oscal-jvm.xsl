<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:r="http://csrc.nist.gov/ns/random"
                version="3.0"
                xpath-default-namespace="http://csrc.nist.gov/ns/oscal/1.0"
                exclude-result-prefixes="#all">
   <xsl:output indent="true"/>
   <!-- Apply this XSLT to itself with a runtime parameter, e.g. 'make=catalog' to produce a blank (but nominally valid) OSCAL catalog XML instance.-->
   <!-- This XSLT was produced by the customization 'produce-generator-java.xsl`, a customization of the transformation `produce-generator3.xsl`, and calls reflexive Java functionality, (when available) to provide results with new UUIDs.-->
   <!-- The OSCAL produced can be either minimal - only required structures are given - or maximal. Use parameter 'include=all' to include optional contents, or leave the setting with default 'required-only' and the XSLT will produce only elements and attributes required in each model.-->
   <!-- All OSCAL formats supported: -->
   <!-- - make=catalog -->
   <!-- - make=profile -->
   <!-- - make=component-definition -->
   <!-- - make=system-security-plan -->
   <!-- - make=assessment-plan -->
   <!-- - make=assessment-results -->
   <!-- - make=plan-of-action-and-milestones -->
   <!-- Alternatively, the same results can be produced without stated inputs or parameters, by invoking the appropriate template by name "make-catalog" (etc.), as initial template. This syntax can be more lightweight: for example `xslt3 -xsl:generate-oscal.xsl -it:make-catalog` for SaxonJS under node JS.-->
   <!-- When applied to an OSCAL document (as source), this XSLT ignores runtime parameters produces a copy of the input with new timestamp (in OSCAL metadata) and top-level @uuid.-->
   <!-- Limitations: -->
   <!-- - When a model permits a choice, only the first defined or referenced of the permitted elements is included. Delete this element to permit alternate members of the choice. As indicators, other available alternatives are included in comments. -->
   <!-- - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = -->
   <xsl:param name="make" as="xs:string">none</xsl:param>
   <xsl:param name="include" as="xs:string">required-only</xsl:param>
   <xsl:variable name="including-optional" as="xs:boolean" select="$include='all'"/>
   <xsl:mode on-no-match="shallow-copy"/>
   <xsl:template match="/*/@uuid">
      <xsl:attribute xmlns:uuid="java:java.util.UUID"
                     use-when="function-available('uuid:randomUUID')"
                     name="uuid">{ uuid:randomUUID() }</xsl:attribute>
      <xsl:attribute xmlns:uuid="java:java.util.UUID"
                     name="uuid"
                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
   </xsl:template>
   <xsl:template xmlns="http://csrc.nist.gov/ns/oscal/1.0"
                 match="last-modified"
                 expand-text="true">
      <last-modified>{ current-dateTime() }</last-modified>
   </xsl:template>
   <xsl:template match="/xsl:stylesheet">
      <xsl:message>Invoke with parameter make=(catalog|profile|component-definition|system-security-plan|assessment-plan|assessment-results|plan-of-action-and-milestones)</xsl:message>
   </xsl:template>
   <!-- - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = - = + = - = # = -->
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='catalog']"
                 name="make-catalog">
      <catalog xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <xsl:if test="$including-optional">
            <param>
               <xsl:attribute name="id">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <xsl:attribute name="depends-on">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <label>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </label>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <usage>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </usage>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <constraint>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <test>
                           <expression>
                              <xsl:text>string</xsl:text>
                           </expression>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </test>
                     </xsl:if>
                  </constraint>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <guideline>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </guideline>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <value>
                     <xsl:text>string</xsl:text>
                  </value>
               </xsl:if>
               <xsl:comment xmlns:uuid="java:java.util.UUID">
                  <xsl:text disable-output-escaping="true"> &lt;select/&gt; </xsl:text>
               </xsl:comment>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </param>
         </xsl:if>
         <xsl:if test="$including-optional">
            <control>
               <xsl:attribute name="id">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <xsl:if test="$including-optional">
                  <param>
                     <xsl:attribute name="id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="depends-on">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <label>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </label>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <usage>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </usage>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <constraint>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <test>
                                 <expression>
                                    <xsl:text>string</xsl:text>
                                 </expression>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </test>
                           </xsl:if>
                        </constraint>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <guideline>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </guideline>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <value>
                           <xsl:text>string</xsl:text>
                        </value>
                     </xsl:if>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;select/&gt; </xsl:text>
                     </xsl:comment>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </param>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <part>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <part>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </part>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                  </part>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <control>
                     <xsl:attribute name="id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </control>
               </xsl:if>
            </control>
         </xsl:if>
         <xsl:if test="$including-optional">
            <group>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <xsl:if test="$including-optional">
                  <param>
                     <xsl:attribute name="id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="depends-on">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <label>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </label>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <usage>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </usage>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <constraint>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <test>
                                 <expression>
                                    <xsl:text>string</xsl:text>
                                 </expression>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </test>
                           </xsl:if>
                        </constraint>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <guideline>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </guideline>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <value>
                           <xsl:text>string</xsl:text>
                        </value>
                     </xsl:if>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;select/&gt; </xsl:text>
                     </xsl:comment>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </param>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <part>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <part>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </part>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                  </part>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <group>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/control&gt; </xsl:text>
                     </xsl:comment>
                  </group>
               </xsl:if>
               <xsl:comment xmlns:uuid="java:java.util.UUID">
                  <xsl:text disable-output-escaping="true"> &lt;control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/control&gt; </xsl:text>
               </xsl:comment>
            </group>
         </xsl:if>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </catalog>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='profile']"
                 name="make-profile">
      <profile xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <import>
            <xsl:attribute name="href">
               <xsl:text>uri-reference</xsl:text>
            </xsl:attribute>
            <include-all/>
            <xsl:comment xmlns:uuid="java:java.util.UUID">
               <xsl:text disable-output-escaping="true"> &lt;include-controls&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="with-child-controls"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-controls&gt; </xsl:text>
            </xsl:comment>
            <xsl:if test="$including-optional">
               <exclude-controls>
                  <xsl:attribute name="with-child-controls">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <with-id>
                        <xsl:text>token</xsl:text>
                     </with-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <matching>
                        <xsl:attribute name="pattern">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                     </matching>
                  </xsl:if>
               </exclude-controls>
            </xsl:if>
         </import>
         <xsl:if test="$including-optional">
            <merge>
               <xsl:if test="$including-optional">
                  <combine>
                     <xsl:attribute name="method">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                  </combine>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <as-is>
                     <xsl:text>false</xsl:text>
                  </as-is>
               </xsl:if>
               <xsl:comment xmlns:uuid="java:java.util.UUID">
                  <xsl:text disable-output-escaping="true"> &lt;custom/&gt; </xsl:text>
               </xsl:comment>
            </merge>
         </xsl:if>
         <xsl:if test="$including-optional">
            <modify>
               <xsl:if test="$including-optional">
                  <set-parameter>
                     <xsl:attribute name="param-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="depends-on">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <label>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </label>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <usage>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </usage>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <constraint>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <test>
                                 <expression>
                                    <xsl:text>string</xsl:text>
                                 </expression>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </test>
                           </xsl:if>
                        </constraint>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <guideline>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </guideline>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <value>
                           <xsl:text>string</xsl:text>
                        </value>
                     </xsl:if>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;select/&gt; </xsl:text>
                     </xsl:comment>
                  </set-parameter>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <alter>
                     <xsl:attribute name="control-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <remove>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-item-name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-ns">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </remove>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <add>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="position">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="by-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <param>
                                 <xsl:attribute name="id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="depends-on">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <label>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </label>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <usage>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </usage>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <constraint>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <test>
                                             <expression>
                                                <xsl:text>string</xsl:text>
                                             </expression>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </test>
                                       </xsl:if>
                                    </constraint>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <guideline>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </guideline>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <value>
                                       <xsl:text>string</xsl:text>
                                    </value>
                                 </xsl:if>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;select/&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </param>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <part>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <title>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </title>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <part>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                    </part>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                              </part>
                           </xsl:if>
                        </add>
                     </xsl:if>
                  </alter>
               </xsl:if>
            </modify>
         </xsl:if>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </profile>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='component-definition']"
                 name="make-component-definition">
      <component-definition xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <xsl:if test="$including-optional">
            <import-component-definition>
               <xsl:attribute name="href">
                  <xsl:text>uri-reference</xsl:text>
               </xsl:attribute>
            </import-component-definition>
         </xsl:if>
         <xsl:if test="$including-optional">
            <component>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:attribute name="type">
                  <xsl:text>string</xsl:text>
               </xsl:attribute>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <xsl:if test="$including-optional">
                  <purpose>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </purpose>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <responsible-role>
                     <xsl:attribute name="role-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </responsible-role>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <protocol>
                     <xsl:attribute name="name">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <port-range>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                 <xsl:text>0</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                 <xsl:text>0</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </port-range>
                     </xsl:if>
                  </protocol>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <control-implementation>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="source">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <set-parameter>
                           <xsl:attribute name="param-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <value>
                              <xsl:text>string</xsl:text>
                           </value>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </set-parameter>
                     </xsl:if>
                     <implemented-requirement>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="control-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <set-parameter>
                              <xsl:attribute name="param-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <value>
                                 <xsl:text>string</xsl:text>
                              </value>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </set-parameter>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-role>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-role>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <statement>
                              <xsl:attribute name="statement-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-role>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-role>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </statement>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </implemented-requirement>
                  </control-implementation>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </component>
         </xsl:if>
         <xsl:if test="$including-optional">
            <capability>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:attribute name="name">
                  <xsl:text>string</xsl:text>
               </xsl:attribute>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <incorporates-component>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="component-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="component-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </incorporates-component>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <control-implementation>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="source">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <set-parameter>
                           <xsl:attribute name="param-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <value>
                              <xsl:text>string</xsl:text>
                           </value>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </set-parameter>
                     </xsl:if>
                     <implemented-requirement>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="control-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <set-parameter>
                              <xsl:attribute name="param-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <value>
                                 <xsl:text>string</xsl:text>
                              </value>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </set-parameter>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-role>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-role>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <statement>
                              <xsl:attribute name="statement-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-role>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-role>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </statement>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </implemented-requirement>
                  </control-implementation>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </capability>
         </xsl:if>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </component-definition>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='system-security-plan']"
                 name="make-system-security-plan">
      <system-security-plan xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <import-profile>
            <xsl:attribute name="href">
               <xsl:text>uri-reference</xsl:text>
            </xsl:attribute>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </import-profile>
         <system-characteristics>
            <system-id>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="identifier-type">
                     <xsl:text>protocol:uri</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <xsl:text>string</xsl:text>
            </system-id>
            <system-name>
               <xsl:text>string</xsl:text>
            </system-name>
            <xsl:if test="$including-optional">
               <system-name-short>
                  <xsl:text>string</xsl:text>
               </system-name-short>
            </xsl:if>
            <description>
               <p>Paragraphs and (block-level) markup contents.</p>
            </description>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <date-authorized>
                  <xsl:text>{ current-date() }</xsl:text>
               </date-authorized>
            </xsl:if>
            <security-sensitivity-level>
               <xsl:text>string</xsl:text>
            </security-sensitivity-level>
            <system-information>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <information-type>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <categorization>
                        <xsl:attribute name="system">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <information-type-id>
                              <xsl:text>string</xsl:text>
                           </information-type-id>
                        </xsl:if>
                     </categorization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <confidentiality-impact>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <base>
                        <xsl:text>string</xsl:text>
                     </base>
                     <xsl:if test="$including-optional">
                        <selected>
                           <xsl:text>string</xsl:text>
                        </selected>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <adjustment-justification>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </adjustment-justification>
                     </xsl:if>
                  </confidentiality-impact>
                  <integrity-impact>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <base>
                        <xsl:text>string</xsl:text>
                     </base>
                     <xsl:if test="$including-optional">
                        <selected>
                           <xsl:text>string</xsl:text>
                        </selected>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <adjustment-justification>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </adjustment-justification>
                     </xsl:if>
                  </integrity-impact>
                  <availability-impact>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <base>
                        <xsl:text>string</xsl:text>
                     </base>
                     <xsl:if test="$including-optional">
                        <selected>
                           <xsl:text>string</xsl:text>
                        </selected>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <adjustment-justification>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </adjustment-justification>
                     </xsl:if>
                  </availability-impact>
               </information-type>
            </system-information>
            <security-impact-level>
               <security-objective-confidentiality>
                  <xsl:text>string</xsl:text>
               </security-objective-confidentiality>
               <security-objective-integrity>
                  <xsl:text>string</xsl:text>
               </security-objective-integrity>
               <security-objective-availability>
                  <xsl:text>string</xsl:text>
               </security-objective-availability>
            </security-impact-level>
            <status>
               <xsl:attribute name="state">
                  <xsl:text>string</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </status>
            <authorization-boundary>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <diagram>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <caption>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </caption>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </diagram>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </authorization-boundary>
            <xsl:if test="$including-optional">
               <network-architecture>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <diagram>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <caption>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </caption>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </diagram>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </network-architecture>
            </xsl:if>
            <xsl:if test="$including-optional">
               <data-flow>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <diagram>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <caption>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </caption>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </diagram>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </data-flow>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </system-characteristics>
         <system-implementation>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <leveraged-authorization>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <date-authorized>
                     <xsl:text>{ current-date() }</xsl:text>
                  </date-authorized>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </leveraged-authorization>
            </xsl:if>
            <user>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:if test="$including-optional">
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <short-name>
                     <xsl:text>string</xsl:text>
                  </short-name>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <role-id>
                     <xsl:text>token</xsl:text>
                  </role-id>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <authorized-privilege>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <function-performed>
                        <xsl:text>string</xsl:text>
                     </function-performed>
                  </authorized-privilege>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </user>
            <component>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:attribute name="type">
                  <xsl:text>string</xsl:text>
               </xsl:attribute>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <xsl:if test="$including-optional">
                  <purpose>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </purpose>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <status>
                  <xsl:attribute name="state">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </status>
               <xsl:if test="$including-optional">
                  <responsible-role>
                     <xsl:attribute name="role-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </responsible-role>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <protocol>
                     <xsl:attribute name="name">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <port-range>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                 <xsl:text>0</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                 <xsl:text>0</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </port-range>
                     </xsl:if>
                  </protocol>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </component>
            <xsl:if test="$including-optional">
               <inventory-item>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <responsible-party>
                        <xsl:attribute name="role-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </responsible-party>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <implemented-component>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="component-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="component-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-party>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-party>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </implemented-component>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </inventory-item>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </system-implementation>
         <control-implementation>
            <description>
               <p>Paragraphs and (block-level) markup contents.</p>
            </description>
            <xsl:if test="$including-optional">
               <set-parameter>
                  <xsl:attribute name="param-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <value>
                     <xsl:text>string</xsl:text>
                  </value>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </set-parameter>
            </xsl:if>
            <implemented-requirement>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:attribute name="control-id">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <set-parameter>
                     <xsl:attribute name="param-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <value>
                        <xsl:text>string</xsl:text>
                     </value>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </set-parameter>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <responsible-role>
                     <xsl:attribute name="role-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </responsible-role>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <statement>
                     <xsl:attribute name="statement-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <by-component>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <set-parameter>
                                 <xsl:attribute name="param-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <value>
                                    <xsl:text>string</xsl:text>
                                 </value>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </set-parameter>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <implementation-status>
                                 <xsl:attribute name="state">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </implementation-status>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <export>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <provided>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <responsible-role>
                                             <xsl:attribute name="role-id">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <party-uuid>
                                                   <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </party-uuid>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </responsible-role>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </provided>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsibility>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="provided-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="provided-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <responsible-role>
                                             <xsl:attribute name="role-id">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <party-uuid>
                                                   <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </party-uuid>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </responsible-role>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsibility>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </export>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <inherited>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="provided-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="provided-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-role>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-role>
                                 </xsl:if>
                              </inherited>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <satisfied>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="responsibility-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="responsibility-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-role>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-role>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </satisfied>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </by-component>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </statement>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <by-component>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="component-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="component-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <set-parameter>
                           <xsl:attribute name="param-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <value>
                              <xsl:text>string</xsl:text>
                           </value>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </set-parameter>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <implementation-status>
                           <xsl:attribute name="state">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </implementation-status>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <export>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <provided>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-role>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-role>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </provided>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsibility>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="provided-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="provided-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-role>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-role>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsibility>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </export>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <inherited>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="provided-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="provided-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                        </inherited>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <satisfied>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="responsibility-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="responsibility-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </satisfied>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </by-component>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </implemented-requirement>
         </control-implementation>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </system-security-plan>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='assessment-plan']"
                 name="make-assessment-plan">
      <assessment-plan xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <import-ssp>
            <xsl:attribute name="href">
               <xsl:text>uri-reference</xsl:text>
            </xsl:attribute>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </import-ssp>
         <xsl:if test="$including-optional">
            <local-definitions>
               <xsl:if test="$including-optional">
                  <component>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <purpose>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </purpose>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <status>
                        <xsl:attribute name="state">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </status>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <protocol>
                           <xsl:attribute name="name">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <port-range>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                              </port-range>
                           </xsl:if>
                        </protocol>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </component>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <inventory-item>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-party>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <party-uuid>
                              <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </party-uuid>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-party>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <implemented-component>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-party>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-party>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </implemented-component>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </inventory-item>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <user>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <short-name>
                           <xsl:text>string</xsl:text>
                        </short-name>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <role-id>
                           <xsl:text>token</xsl:text>
                        </role-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <authorized-privilege>
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <function-performed>
                              <xsl:text>string</xsl:text>
                           </function-performed>
                        </authorized-privilege>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </user>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <objectives-and-methods>
                     <xsl:attribute name="control-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <part>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <part>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                           </part>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                     </part>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </objectives-and-methods>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <activity>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <step>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <reviewed-controls>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <control-selection>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-control>
                                          <xsl:attribute name="control-id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <statement-id>
                                                <xsl:text>token</xsl:text>
                                             </statement-id>
                                          </xsl:if>
                                       </exclude-control>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </control-selection>
                                 <xsl:if test="$including-optional">
                                    <control-objective-selection>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-objective>
                                             <xsl:attribute name="objective-id">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </exclude-objective>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </control-objective-selection>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </reviewed-controls>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </step>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <related-controls>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <control-selection>
                              <xsl:if test="$including-optional">
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <include-all/>
                              <xsl:comment xmlns:uuid="java:java.util.UUID">
                                 <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
                              </xsl:comment>
                              <xsl:if test="$including-optional">
                                 <exclude-control>
                                    <xsl:attribute name="control-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <statement-id>
                                          <xsl:text>token</xsl:text>
                                       </statement-id>
                                    </xsl:if>
                                 </exclude-control>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </control-selection>
                           <xsl:if test="$including-optional">
                              <control-objective-selection>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-objective>
                                       <xsl:attribute name="objective-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </exclude-objective>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </control-objective-selection>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </related-controls>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </activity>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </local-definitions>
         </xsl:if>
         <xsl:if test="$including-optional">
            <terms-and-conditions>
               <xsl:if test="$including-optional">
                  <part>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <part>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </part>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                  </part>
               </xsl:if>
            </terms-and-conditions>
         </xsl:if>
         <reviewed-controls>
            <xsl:if test="$including-optional">
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <control-selection>
               <xsl:if test="$including-optional">
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <include-all/>
               <xsl:comment xmlns:uuid="java:java.util.UUID">
                  <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
               </xsl:comment>
               <xsl:if test="$including-optional">
                  <exclude-control>
                     <xsl:attribute name="control-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <statement-id>
                           <xsl:text>token</xsl:text>
                        </statement-id>
                     </xsl:if>
                  </exclude-control>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </control-selection>
            <xsl:if test="$including-optional">
               <control-objective-selection>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <include-all/>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <exclude-objective>
                        <xsl:attribute name="objective-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </exclude-objective>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </control-objective-selection>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </reviewed-controls>
         <xsl:if test="$including-optional">
            <assessment-subject>
               <xsl:attribute name="type">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <include-all/>
               <xsl:comment xmlns:uuid="java:java.util.UUID">
                  <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
               </xsl:comment>
               <xsl:if test="$including-optional">
                  <exclude-subject>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="subject-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="subject-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </exclude-subject>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </assessment-subject>
         </xsl:if>
         <xsl:if test="$including-optional">
            <assessment-assets>
               <xsl:if test="$including-optional">
                  <component>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <purpose>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </purpose>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <status>
                        <xsl:attribute name="state">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </status>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <protocol>
                           <xsl:attribute name="name">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <port-range>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                              </port-range>
                           </xsl:if>
                        </protocol>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </component>
               </xsl:if>
               <assessment-platform>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <uses-component>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="component-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="component-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-party>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-party>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </uses-component>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </assessment-platform>
            </assessment-assets>
         </xsl:if>
         <xsl:if test="$including-optional">
            <task>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:attribute name="type">
                  <xsl:text>token</xsl:text>
               </xsl:attribute>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <xsl:if test="$including-optional">
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <timing>
                     <on-date>
                        <xsl:attribute name="date">
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </xsl:attribute>
                     </on-date>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;within-date-range&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="start"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="end"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/within-date-range&gt; </xsl:text>
                     </xsl:comment>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;at-frequency&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="period"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;1&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="unit"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;string&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/at-frequency&gt; </xsl:text>
                     </xsl:comment>
                  </timing>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <dependency>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="task-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="task-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </dependency>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <task>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </task>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <associated-activity>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="activity-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="activity-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <subject>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <include-all/>
                        <xsl:comment xmlns:uuid="java:java.util.UUID">
                           <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                        </xsl:comment>
                        <xsl:if test="$including-optional">
                           <exclude-subject>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="subject-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="subject-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </exclude-subject>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </subject>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </associated-activity>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <subject>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <include-all/>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                     </xsl:comment>
                     <xsl:if test="$including-optional">
                        <exclude-subject>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="subject-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="subject-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </exclude-subject>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </subject>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <responsible-role>
                     <xsl:attribute name="role-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </responsible-role>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </task>
         </xsl:if>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </assessment-plan>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='assessment-results']"
                 name="make-assessment-results">
      <assessment-results xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <import-ap>
            <xsl:attribute name="href">
               <xsl:text>uri-reference</xsl:text>
            </xsl:attribute>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </import-ap>
         <xsl:if test="$including-optional">
            <local-definitions>
               <xsl:if test="$including-optional">
                  <objectives-and-methods>
                     <xsl:attribute name="control-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <part>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <part>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                           </part>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                     </part>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </objectives-and-methods>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <activity>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <step>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <reviewed-controls>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <control-selection>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-control>
                                          <xsl:attribute name="control-id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <statement-id>
                                                <xsl:text>token</xsl:text>
                                             </statement-id>
                                          </xsl:if>
                                       </exclude-control>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </control-selection>
                                 <xsl:if test="$including-optional">
                                    <control-objective-selection>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-objective>
                                             <xsl:attribute name="objective-id">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </exclude-objective>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </control-objective-selection>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </reviewed-controls>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </step>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <related-controls>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <control-selection>
                              <xsl:if test="$including-optional">
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <include-all/>
                              <xsl:comment xmlns:uuid="java:java.util.UUID">
                                 <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
                              </xsl:comment>
                              <xsl:if test="$including-optional">
                                 <exclude-control>
                                    <xsl:attribute name="control-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <statement-id>
                                          <xsl:text>token</xsl:text>
                                       </statement-id>
                                    </xsl:if>
                                 </exclude-control>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </control-selection>
                           <xsl:if test="$including-optional">
                              <control-objective-selection>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-objective>
                                       <xsl:attribute name="objective-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </exclude-objective>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </control-objective-selection>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </related-controls>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </activity>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </local-definitions>
         </xsl:if>
         <result>
            <xsl:attribute xmlns:uuid="java:java.util.UUID"
                           name="uuid"
                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
            <xsl:attribute xmlns:uuid="java:java.util.UUID"
                           name="uuid"
                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <description>
               <p>Paragraphs and (block-level) markup contents.</p>
            </description>
            <start>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </start>
            <xsl:if test="$including-optional">
               <end>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </end>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <local-definitions>
                  <xsl:if test="$including-optional">
                     <component>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <purpose>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </purpose>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <status>
                           <xsl:attribute name="state">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </status>
                        <xsl:if test="$including-optional">
                           <responsible-role>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-role>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <protocol>
                              <xsl:attribute name="name">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <title>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </title>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <port-range>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                          <xsl:text>0</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                          <xsl:text>0</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                 </port-range>
                              </xsl:if>
                           </protocol>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </component>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <inventory-item>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-party>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-party>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <implemented-component>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="component-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="component-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-party>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-party>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </implemented-component>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </inventory-item>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <user>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <short-name>
                              <xsl:text>string</xsl:text>
                           </short-name>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <role-id>
                              <xsl:text>token</xsl:text>
                           </role-id>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <authorized-privilege>
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                              <xsl:if test="$including-optional">
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                              </xsl:if>
                              <function-performed>
                                 <xsl:text>string</xsl:text>
                              </function-performed>
                           </authorized-privilege>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </user>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <assessment-assets>
                        <xsl:if test="$including-optional">
                           <component>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:attribute name="type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                              <xsl:if test="$including-optional">
                                 <purpose>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </purpose>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <status>
                                 <xsl:attribute name="state">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </status>
                              <xsl:if test="$including-optional">
                                 <responsible-role>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-role>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <protocol>
                                    <xsl:attribute name="name">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <title>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </title>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <port-range>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                                <xsl:text>0</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                                <xsl:text>0</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                       </port-range>
                                    </xsl:if>
                                 </protocol>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </component>
                        </xsl:if>
                        <assessment-platform>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <uses-component>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="component-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="component-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-party>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-party>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </uses-component>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </assessment-platform>
                     </assessment-assets>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <assessment-task>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <timing>
                              <on-date>
                                 <xsl:attribute name="date">
                                    <xsl:text>{ current-dateTime() }</xsl:text>
                                 </xsl:attribute>
                              </on-date>
                              <xsl:comment xmlns:uuid="java:java.util.UUID">
                                 <xsl:text disable-output-escaping="true"> &lt;within-date-range&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="start"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="end"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/within-date-range&gt; </xsl:text>
                              </xsl:comment>
                              <xsl:comment xmlns:uuid="java:java.util.UUID">
                                 <xsl:text disable-output-escaping="true"> &lt;at-frequency&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="period"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;1&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="unit"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;string&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/at-frequency&gt; </xsl:text>
                              </xsl:comment>
                           </timing>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <dependency>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </dependency>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </task>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <associated-activity>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="activity-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="activity-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-role>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-role>
                              </xsl:if>
                              <subject>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </exclude-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </associated-activity>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <subject>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <include-all/>
                              <xsl:comment xmlns:uuid="java:java.util.UUID">
                                 <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                              </xsl:comment>
                              <xsl:if test="$including-optional">
                                 <exclude-subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </exclude-subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </subject>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <responsible-role>
                              <xsl:attribute name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </responsible-role>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </assessment-task>
                  </xsl:if>
               </local-definitions>
            </xsl:if>
            <reviewed-controls>
               <xsl:if test="$including-optional">
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <control-selection>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <include-all/>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;include-control&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="control-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-control&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <exclude-control>
                        <xsl:attribute name="control-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <statement-id>
                              <xsl:text>token</xsl:text>
                           </statement-id>
                        </xsl:if>
                     </exclude-control>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </control-selection>
               <xsl:if test="$including-optional">
                  <control-objective-selection>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <include-all/>
                     <xsl:comment xmlns:uuid="java:java.util.UUID">
                        <xsl:text disable-output-escaping="true"> &lt;include-objective&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="objective-id"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-objective&gt; </xsl:text>
                     </xsl:comment>
                     <xsl:if test="$including-optional">
                        <exclude-objective>
                           <xsl:attribute name="objective-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </exclude-objective>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </control-objective-selection>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </reviewed-controls>
            <xsl:if test="$including-optional">
               <attestation>
                  <xsl:if test="$including-optional">
                     <responsible-party>
                        <xsl:attribute name="role-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <party-uuid>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </party-uuid>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </responsible-party>
                  </xsl:if>
                  <part>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <part>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </part>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                  </part>
               </attestation>
            </xsl:if>
            <xsl:if test="$including-optional">
               <assessment-log>
                  <entry>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <start>
                        <xsl:text>{ current-dateTime() }</xsl:text>
                     </start>
                     <xsl:if test="$including-optional">
                        <end>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </end>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <logged-by>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="party-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="party-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                        </logged-by>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <related-task>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-party>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-party>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <subject>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </exclude-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <identified-subject>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </identified-subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </related-task>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </entry>
               </assessment-log>
            </xsl:if>
            <xsl:if test="$including-optional">
               <observation>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <method>
                     <xsl:text>string</xsl:text>
                  </method>
                  <xsl:if test="$including-optional">
                     <type>
                        <xsl:text>token</xsl:text>
                     </type>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <origin>
                        <actor>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </actor>
                        <xsl:if test="$including-optional">
                           <related-task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-party>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-party>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <identified-subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </identified-subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </related-task>
                        </xsl:if>
                     </origin>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <subject>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="subject-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="subject-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </subject>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <relevant-evidence>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </relevant-evidence>
                  </xsl:if>
                  <collected>
                     <xsl:text>{ current-dateTime() }</xsl:text>
                  </collected>
                  <xsl:if test="$including-optional">
                     <expires>
                        <xsl:text>{ current-dateTime() }</xsl:text>
                     </expires>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </observation>
            </xsl:if>
            <xsl:if test="$including-optional">
               <risk>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <statement>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </statement>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <status>
                     <xsl:text>token</xsl:text>
                  </status>
                  <xsl:if test="$including-optional">
                     <origin>
                        <actor>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </actor>
                        <xsl:if test="$including-optional">
                           <related-task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-party>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-party>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <identified-subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </identified-subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </related-task>
                        </xsl:if>
                     </origin>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <threat-id>
                        <xsl:attribute name="system">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>protocol:uri</xsl:text>
                     </threat-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <characterization>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <origin>
                           <actor>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="actor-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="actor-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                           </actor>
                           <xsl:if test="$including-optional">
                              <related-task>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-party>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-party>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <identified-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-placeholder-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-placeholder-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <subject>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <description>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </description>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <include-all/>
                                          <xsl:comment xmlns:uuid="java:java.util.UUID">
                                             <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                          </xsl:comment>
                                          <xsl:if test="$including-optional">
                                             <exclude-subject>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                <xsl:attribute name="type">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <prop>
                                                      <xsl:attribute name="name">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="value">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                            <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                            <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                            <xsl:text>protocol:uri</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </prop>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <link>
                                                      <xsl:attribute name="href">
                                                         <xsl:text>uri-reference</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="media-type">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <text>
                                                            <xsl:text>Text and (inline) markup</xsl:text>
                                                         </text>
                                                      </xsl:if>
                                                   </link>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </exclude-subject>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </subject>
                                    </identified-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </related-task>
                           </xsl:if>
                        </origin>
                        <facet>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="system">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </facet>
                     </characterization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <mitigating-factor>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="implementation-uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <subject>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="subject-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="subject-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <title>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </title>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </subject>
                        </xsl:if>
                     </mitigating-factor>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <deadline>
                        <xsl:text>{ current-dateTime() }</xsl:text>
                     </deadline>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <response>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:attribute name="lifecycle">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <origin>
                              <actor>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="actor-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="actor-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                              </actor>
                              <xsl:if test="$including-optional">
                                 <related-task>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <responsible-party>
                                          <xsl:attribute name="role-id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </responsible-party>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <subject>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <description>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </description>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <include-all/>
                                          <xsl:comment xmlns:uuid="java:java.util.UUID">
                                             <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                          </xsl:comment>
                                          <xsl:if test="$including-optional">
                                             <exclude-subject>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                <xsl:attribute name="type">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <prop>
                                                      <xsl:attribute name="name">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="value">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                            <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                            <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                            <xsl:text>protocol:uri</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </prop>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <link>
                                                      <xsl:attribute name="href">
                                                         <xsl:text>uri-reference</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="media-type">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <text>
                                                            <xsl:text>Text and (inline) markup</xsl:text>
                                                         </text>
                                                      </xsl:if>
                                                   </link>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </exclude-subject>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <identified-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-placeholder-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-placeholder-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <subject>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <description>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </description>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <include-all/>
                                             <xsl:comment xmlns:uuid="java:java.util.UUID">
                                                <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                             </xsl:comment>
                                             <xsl:if test="$including-optional">
                                                <exclude-subject>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                   <xsl:attribute name="type">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <prop>
                                                         <xsl:attribute name="name">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="value">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                               <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                               <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                               <xsl:text>protocol:uri</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <remarks>
                                                               <p>Paragraphs and (block-level) markup contents.</p>
                                                            </remarks>
                                                         </xsl:if>
                                                      </prop>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <link>
                                                         <xsl:attribute name="href">
                                                            <xsl:text>uri-reference</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="media-type">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <text>
                                                               <xsl:text>Text and (inline) markup</xsl:text>
                                                            </text>
                                                         </xsl:if>
                                                      </link>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </exclude-subject>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </subject>
                                       </identified-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </related-task>
                              </xsl:if>
                           </origin>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <required-asset>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <title>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </title>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <title>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </title>
                              </xsl:if>
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </required-asset>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                              <xsl:if test="$including-optional">
                                 <description>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </description>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <timing>
                                    <on-date>
                                       <xsl:attribute name="date">
                                          <xsl:text>{ current-dateTime() }</xsl:text>
                                       </xsl:attribute>
                                    </on-date>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;within-date-range&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="start"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="end"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/within-date-range&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;at-frequency&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="period"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;1&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="unit"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;string&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/at-frequency&gt; </xsl:text>
                                    </xsl:comment>
                                 </timing>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <dependency>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </dependency>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <task>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <title>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </title>
                                 </task>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <associated-activity>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="activity-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="activity-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <responsible-role>
                                          <xsl:attribute name="role-id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <party-uuid>
                                                <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </party-uuid>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </responsible-role>
                                    </xsl:if>
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </associated-activity>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-role>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-role>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </task>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </response>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <risk-log>
                        <entry>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <start>
                              <xsl:text>{ current-dateTime() }</xsl:text>
                           </start>
                           <xsl:if test="$including-optional">
                              <end>
                                 <xsl:text>{ current-dateTime() }</xsl:text>
                              </end>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <logged-by>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="party-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="party-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                              </logged-by>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <status-change>
                                 <xsl:text>token</xsl:text>
                              </status-change>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <related-response>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="response-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="response-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <related-task>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="task-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="task-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <responsible-party>
                                             <xsl:attribute name="role-id">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <party-uuid>
                                                <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </party-uuid>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </responsible-party>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <subject>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <description>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </description>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <include-all/>
                                             <xsl:comment xmlns:uuid="java:java.util.UUID">
                                                <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                             </xsl:comment>
                                             <xsl:if test="$including-optional">
                                                <exclude-subject>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                   <xsl:attribute name="type">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <prop>
                                                         <xsl:attribute name="name">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="value">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                               <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                               <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                               <xsl:text>protocol:uri</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <remarks>
                                                               <p>Paragraphs and (block-level) markup contents.</p>
                                                            </remarks>
                                                         </xsl:if>
                                                      </prop>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <link>
                                                         <xsl:attribute name="href">
                                                            <xsl:text>uri-reference</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="media-type">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <text>
                                                               <xsl:text>Text and (inline) markup</xsl:text>
                                                            </text>
                                                         </xsl:if>
                                                      </link>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </exclude-subject>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <identified-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-placeholder-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-placeholder-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <subject>
                                                <xsl:attribute name="type">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <description>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </description>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <prop>
                                                      <xsl:attribute name="name">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="value">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                            <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                            <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                            <xsl:text>protocol:uri</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </prop>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <link>
                                                      <xsl:attribute name="href">
                                                         <xsl:text>uri-reference</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="media-type">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <text>
                                                            <xsl:text>Text and (inline) markup</xsl:text>
                                                         </text>
                                                      </xsl:if>
                                                   </link>
                                                </xsl:if>
                                                <include-all/>
                                                <xsl:comment xmlns:uuid="java:java.util.UUID">
                                                   <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                                </xsl:comment>
                                                <xsl:if test="$including-optional">
                                                   <exclude-subject>
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                     name="subject-uuid"
                                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                     name="subject-uuid"
                                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                      <xsl:attribute name="type">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <prop>
                                                            <xsl:attribute name="name">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                            <xsl:attribute name="value">
                                                               <xsl:text>string</xsl:text>
                                                            </xsl:attribute>
                                                            <xsl:if test="$including-optional">
                                                               <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                                  <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                                  <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                               </xsl:attribute>
                                                            </xsl:if>
                                                            <xsl:if test="$including-optional">
                                                               <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                                  <xsl:text>protocol:uri</xsl:text>
                                                               </xsl:attribute>
                                                            </xsl:if>
                                                            <xsl:if test="$including-optional">
                                                               <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                                  <xsl:text>token</xsl:text>
                                                               </xsl:attribute>
                                                            </xsl:if>
                                                            <xsl:if test="$including-optional">
                                                               <remarks>
                                                                  <p>Paragraphs and (block-level) markup contents.</p>
                                                               </remarks>
                                                            </xsl:if>
                                                         </prop>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <link>
                                                            <xsl:attribute name="href">
                                                               <xsl:text>uri-reference</xsl:text>
                                                            </xsl:attribute>
                                                            <xsl:attribute name="media-type">
                                                               <xsl:text>string</xsl:text>
                                                            </xsl:attribute>
                                                            <xsl:if test="$including-optional">
                                                               <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                                  <xsl:text>token</xsl:text>
                                                               </xsl:attribute>
                                                            </xsl:if>
                                                            <xsl:if test="$including-optional">
                                                               <text>
                                                                  <xsl:text>Text and (inline) markup</xsl:text>
                                                               </text>
                                                            </xsl:if>
                                                         </link>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </exclude-subject>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </subject>
                                          </identified-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </related-task>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </related-response>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </entry>
                     </risk-log>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <related-observation>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="observation-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="observation-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     </related-observation>
                  </xsl:if>
               </risk>
            </xsl:if>
            <xsl:if test="$including-optional">
               <finding>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <description>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </description>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <origin>
                        <actor>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </actor>
                        <xsl:if test="$including-optional">
                           <related-task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-party>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-party>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <identified-subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </identified-subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </related-task>
                        </xsl:if>
                     </origin>
                  </xsl:if>
                  <target>
                     <xsl:attribute name="type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="target-id">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <status>
                        <xsl:attribute name="state">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="reason">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </status>
                     <xsl:if test="$including-optional">
                        <implementation-status>
                           <xsl:attribute name="state">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </implementation-status>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </target>
                  <xsl:if test="$including-optional">
                     <implementation-statement-uuid>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </implementation-statement-uuid>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <related-observation>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="observation-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="observation-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     </related-observation>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <associated-risk>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="risk-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="risk-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     </associated-risk>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </finding>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </result>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </assessment-results>
   </xsl:template>
   <xsl:template priority="5"
                 expand-text="true"
                 match="/xsl:stylesheet[$make='plan-of-action-and-milestones']"
                 name="make-plan-of-action-and-milestones">
      <plan-of-action-and-milestones xmlns="http://csrc.nist.gov/ns/oscal/1.0">
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
         <xsl:attribute xmlns:uuid="java:java.util.UUID"
                        name="uuid"
                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
         <metadata>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <xsl:if test="$including-optional">
               <published>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </published>
            </xsl:if>
            <last-modified>
               <xsl:text>{ current-dateTime() }</xsl:text>
            </last-modified>
            <version>
               <xsl:text>string</xsl:text>
            </version>
            <oscal-version>
               <xsl:text>string</xsl:text>
            </oscal-version>
            <xsl:if test="$including-optional">
               <revisions>
                  <revision>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <published>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </published>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <last-modified>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </last-modified>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <version>
                           <xsl:text>string</xsl:text>
                        </version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <oscal-version>
                           <xsl:text>string</xsl:text>
                        </oscal-version>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </revision>
               </revisions>
            </xsl:if>
            <xsl:if test="$including-optional">
               <document-id>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:text>string</xsl:text>
               </document-id>
            </xsl:if>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <role>
                  <xsl:attribute name="id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </role>
            </xsl:if>
            <xsl:if test="$including-optional">
               <location>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:if test="$including-optional">
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                  </xsl:if>
                  <address>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <addr-line>
                           <xsl:text>string</xsl:text>
                        </addr-line>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <city>
                           <xsl:text>string</xsl:text>
                        </city>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <state>
                           <xsl:text>string</xsl:text>
                        </state>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <postal-code>
                           <xsl:text>string</xsl:text>
                        </postal-code>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <country>
                           <xsl:text>string</xsl:text>
                        </country>
                     </xsl:if>
                  </address>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <url>
                        <xsl:text>protocol:uri</xsl:text>
                     </url>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </location>
            </xsl:if>
            <xsl:if test="$including-optional">
               <party>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  <xsl:attribute name="type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <name>
                        <xsl:text>string</xsl:text>
                     </name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <short-name>
                        <xsl:text>string</xsl:text>
                     </short-name>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <external-id>
                        <xsl:attribute name="scheme">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:text>string</xsl:text>
                     </external-id>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <email-address>
                        <xsl:text>receiver@email.org</xsl:text>
                     </email-address>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <telephone-number>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:text>string</xsl:text>
                     </telephone-number>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <address>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <addr-line>
                              <xsl:text>string</xsl:text>
                           </addr-line>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <city>
                              <xsl:text>string</xsl:text>
                           </city>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <state>
                              <xsl:text>string</xsl:text>
                           </state>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <postal-code>
                              <xsl:text>string</xsl:text>
                           </postal-code>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <country>
                              <xsl:text>string</xsl:text>
                           </country>
                        </xsl:if>
                     </address>
                  </xsl:if>
                  <xsl:comment xmlns:uuid="java:java.util.UUID">
                     <xsl:text disable-output-escaping="true"> &lt;location-uuid/&gt; </xsl:text>
                  </xsl:comment>
                  <xsl:if test="$including-optional">
                     <member-of-organization>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </member-of-organization>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <responsible-party>
                  <xsl:attribute name="role-id">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <party-uuid>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                     <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                  </party-uuid>
                  <xsl:if test="$including-optional">
                     <prop>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                              <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                              <xsl:text>protocol:uri</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </prop>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <link>
                        <xsl:attribute name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="media-type">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                        </xsl:if>
                     </link>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </responsible-party>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </metadata>
         <xsl:if test="$including-optional">
            <import-ssp>
               <xsl:attribute name="href">
                  <xsl:text>uri-reference</xsl:text>
               </xsl:attribute>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </import-ssp>
         </xsl:if>
         <xsl:if test="$including-optional">
            <system-id>
               <xsl:if test="$including-optional">
                  <xsl:attribute xmlns:uuid="java:java.util.UUID" name="identifier-type">
                     <xsl:text>protocol:uri</xsl:text>
                  </xsl:attribute>
               </xsl:if>
               <xsl:text>string</xsl:text>
            </system-id>
         </xsl:if>
         <xsl:if test="$including-optional">
            <local-definitions>
               <xsl:if test="$including-optional">
                  <component>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <purpose>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </purpose>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <status>
                        <xsl:attribute name="state">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </status>
                     <xsl:if test="$including-optional">
                        <responsible-role>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <party-uuid>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </party-uuid>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-role>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <protocol>
                           <xsl:attribute name="name">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <port-range>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="start">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="end">
                                       <xsl:text>0</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="transport">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                              </port-range>
                           </xsl:if>
                        </protocol>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </component>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <inventory-item>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <responsible-party>
                           <xsl:attribute name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <party-uuid>
                              <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                              <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                           </party-uuid>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </responsible-party>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <implemented-component>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="component-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-party>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-party>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </implemented-component>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </inventory-item>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </local-definitions>
         </xsl:if>
         <xsl:if test="$including-optional">
            <observation>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <xsl:if test="$including-optional">
                  <title>
                     <xsl:text>Text and (inline) markup</xsl:text>
                  </title>
               </xsl:if>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <method>
                  <xsl:text>string</xsl:text>
               </method>
               <xsl:if test="$including-optional">
                  <type>
                     <xsl:text>token</xsl:text>
                  </type>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <origin>
                     <actor>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="actor-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="actor-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                     </actor>
                     <xsl:if test="$including-optional">
                        <related-task>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-party>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-party>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <subject>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </exclude-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <identified-subject>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </identified-subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </related-task>
                     </xsl:if>
                  </origin>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <subject>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="subject-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="subject-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </subject>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <relevant-evidence>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </relevant-evidence>
               </xsl:if>
               <collected>
                  <xsl:text>{ current-dateTime() }</xsl:text>
               </collected>
               <xsl:if test="$including-optional">
                  <expires>
                     <xsl:text>{ current-dateTime() }</xsl:text>
                  </expires>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <remarks>
                     <p>Paragraphs and (block-level) markup contents.</p>
                  </remarks>
               </xsl:if>
            </observation>
         </xsl:if>
         <xsl:if test="$including-optional">
            <risk>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
               <xsl:attribute xmlns:uuid="java:java.util.UUID"
                              name="uuid"
                              use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               <title>
                  <xsl:text>Text and (inline) markup</xsl:text>
               </title>
               <description>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </description>
               <statement>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </statement>
               <xsl:if test="$including-optional">
                  <prop>
                     <xsl:attribute name="name">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="value">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </prop>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <link>
                     <xsl:attribute name="href">
                        <xsl:text>uri-reference</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute name="media-type">
                        <xsl:text>string</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <text>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </text>
                     </xsl:if>
                  </link>
               </xsl:if>
               <status>
                  <xsl:text>token</xsl:text>
               </status>
               <xsl:if test="$including-optional">
                  <origin>
                     <actor>
                        <xsl:attribute name="type">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="actor-uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="actor-uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                     </actor>
                     <xsl:if test="$including-optional">
                        <related-task>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="task-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-party>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <party-uuid>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </party-uuid>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-party>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <subject>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </exclude-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <identified-subject>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-placeholder-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </identified-subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </related-task>
                     </xsl:if>
                  </origin>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <threat-id>
                     <xsl:attribute name="system">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="href">
                           <xsl:text>uri-reference</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:text>protocol:uri</xsl:text>
                  </threat-id>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <characterization>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <origin>
                        <actor>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="actor-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </actor>
                        <xsl:if test="$including-optional">
                           <related-task>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="task-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <responsible-party>
                                    <xsl:attribute name="role-id">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </responsible-party>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <identified-subject>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="subject-placeholder-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </identified-subject>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </related-task>
                        </xsl:if>
                     </origin>
                     <facet>
                        <xsl:attribute name="name">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="system">
                           <xsl:text>protocol:uri</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="value">
                           <xsl:text>string</xsl:text>
                        </xsl:attribute>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </facet>
                  </characterization>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <mitigating-factor>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="implementation-uuid">
                           <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                           <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                        </xsl:attribute>
                     </xsl:if>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <subject>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="subject-uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="subject-uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </subject>
                     </xsl:if>
                  </mitigating-factor>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <deadline>
                     <xsl:text>{ current-dateTime() }</xsl:text>
                  </deadline>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <response>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:attribute name="lifecycle">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <title>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </title>
                     <description>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </description>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <origin>
                           <actor>
                              <xsl:attribute name="type">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="actor-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="actor-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                           </actor>
                           <xsl:if test="$including-optional">
                              <related-task>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-party>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <party-uuid>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                        use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </party-uuid>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-party>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <subject>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <description>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </description>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <include-all/>
                                       <xsl:comment xmlns:uuid="java:java.util.UUID">
                                          <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                       </xsl:comment>
                                       <xsl:if test="$including-optional">
                                          <exclude-subject>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                            name="subject-uuid"
                                                            use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </exclude-subject>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <identified-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-placeholder-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-placeholder-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <subject>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <description>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </description>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <include-all/>
                                          <xsl:comment xmlns:uuid="java:java.util.UUID">
                                             <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                          </xsl:comment>
                                          <xsl:if test="$including-optional">
                                             <exclude-subject>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                <xsl:attribute name="type">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <prop>
                                                      <xsl:attribute name="name">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="value">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                            <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                            <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                            <xsl:text>protocol:uri</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </prop>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <link>
                                                      <xsl:attribute name="href">
                                                         <xsl:text>uri-reference</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="media-type">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <text>
                                                            <xsl:text>Text and (inline) markup</xsl:text>
                                                         </text>
                                                      </xsl:if>
                                                   </link>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </exclude-subject>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </subject>
                                    </identified-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </related-task>
                           </xsl:if>
                        </origin>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <required-asset>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:if test="$including-optional">
                              <subject>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="subject-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <title>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </title>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <title>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </title>
                           </xsl:if>
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </required-asset>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <task>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                           <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                          name="uuid"
                                          use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                           <xsl:attribute name="type">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                           <xsl:if test="$including-optional">
                              <description>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </description>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <timing>
                                 <on-date>
                                    <xsl:attribute name="date">
                                       <xsl:text>{ current-dateTime() }</xsl:text>
                                    </xsl:attribute>
                                 </on-date>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;within-date-range&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="start"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="end"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;{ current-dateTime() }&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/within-date-range&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;at-frequency&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="period"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;1&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="unit"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;string&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/at-frequency&gt; </xsl:text>
                                 </xsl:comment>
                              </timing>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <dependency>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="task-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </dependency>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <task>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <title>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </title>
                              </task>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <associated-activity>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="activity-uuid"
                                                use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                name="activity-uuid"
                                                use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <responsible-role>
                                       <xsl:attribute name="role-id">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </responsible-role>
                                 </xsl:if>
                                 <subject>
                                    <xsl:attribute name="type">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <description>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </description>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <include-all/>
                                    <xsl:comment xmlns:uuid="java:java.util.UUID">
                                       <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                    </xsl:comment>
                                    <xsl:if test="$including-optional">
                                       <exclude-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </exclude-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </subject>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </associated-activity>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <subject>
                                 <xsl:attribute name="type">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <description>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </description>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <include-all/>
                                 <xsl:comment xmlns:uuid="java:java.util.UUID">
                                    <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                 </xsl:comment>
                                 <xsl:if test="$including-optional">
                                    <exclude-subject>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                      name="subject-uuid"
                                                      use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                       <xsl:attribute name="type">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <prop>
                                             <xsl:attribute name="name">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="value">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                   <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                   <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                   <xsl:text>protocol:uri</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </prop>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <link>
                                             <xsl:attribute name="href">
                                                <xsl:text>uri-reference</xsl:text>
                                             </xsl:attribute>
                                             <xsl:attribute name="media-type">
                                                <xsl:text>string</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <text>
                                                   <xsl:text>Text and (inline) markup</xsl:text>
                                                </text>
                                             </xsl:if>
                                          </link>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </exclude-subject>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </subject>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <responsible-role>
                                 <xsl:attribute name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <prop>
                                       <xsl:attribute name="name">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="value">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                             <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                             <xsl:text>protocol:uri</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <remarks>
                                             <p>Paragraphs and (block-level) markup contents.</p>
                                          </remarks>
                                       </xsl:if>
                                    </prop>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <link>
                                       <xsl:attribute name="href">
                                          <xsl:text>uri-reference</xsl:text>
                                       </xsl:attribute>
                                       <xsl:attribute name="media-type">
                                          <xsl:text>string</xsl:text>
                                       </xsl:attribute>
                                       <xsl:if test="$including-optional">
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                       </xsl:if>
                                       <xsl:if test="$including-optional">
                                          <text>
                                             <xsl:text>Text and (inline) markup</xsl:text>
                                          </text>
                                       </xsl:if>
                                    </link>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <party-uuid>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                     use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </party-uuid>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </responsible-role>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </task>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </response>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <risk-log>
                     <entry>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                        <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                       name="uuid"
                                       use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                        <xsl:if test="$including-optional">
                           <title>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </title>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <description>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </description>
                        </xsl:if>
                        <start>
                           <xsl:text>{ current-dateTime() }</xsl:text>
                        </start>
                        <xsl:if test="$including-optional">
                           <end>
                              <xsl:text>{ current-dateTime() }</xsl:text>
                           </end>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <prop>
                              <xsl:attribute name="name">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="value">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                    <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                    <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                    <xsl:text>protocol:uri</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </prop>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <link>
                              <xsl:attribute name="href">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                              <xsl:attribute name="media-type">
                                 <xsl:text>string</xsl:text>
                              </xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <text>
                                    <xsl:text>Text and (inline) markup</xsl:text>
                                 </text>
                              </xsl:if>
                           </link>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <logged-by>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="party-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="party-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                              </xsl:if>
                           </logged-by>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <status-change>
                              <xsl:text>token</xsl:text>
                           </status-change>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <related-response>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="response-uuid"
                                             use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                              <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                             name="response-uuid"
                                             use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                              <xsl:if test="$including-optional">
                                 <prop>
                                    <xsl:attribute name="name">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="value">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                          <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                          <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                          <xsl:text>protocol:uri</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </prop>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <link>
                                    <xsl:attribute name="href">
                                       <xsl:text>uri-reference</xsl:text>
                                    </xsl:attribute>
                                    <xsl:attribute name="media-type">
                                       <xsl:text>string</xsl:text>
                                    </xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                          <xsl:text>token</xsl:text>
                                       </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <text>
                                          <xsl:text>Text and (inline) markup</xsl:text>
                                       </text>
                                    </xsl:if>
                                 </link>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <related-task>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                   name="task-uuid"
                                                   use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                    <xsl:if test="$including-optional">
                                       <prop>
                                          <xsl:attribute name="name">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="value">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                <xsl:text>protocol:uri</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </prop>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <link>
                                          <xsl:attribute name="href">
                                             <xsl:text>uri-reference</xsl:text>
                                          </xsl:attribute>
                                          <xsl:attribute name="media-type">
                                             <xsl:text>string</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <text>
                                                <xsl:text>Text and (inline) markup</xsl:text>
                                             </text>
                                          </xsl:if>
                                       </link>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <responsible-party>
                                          <xsl:attribute name="role-id">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <party-uuid>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                             <xsl:sequence xmlns:uuid="java:java.util.UUID"
                                                           use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                          </party-uuid>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </responsible-party>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <subject>
                                          <xsl:attribute name="type">
                                             <xsl:text>token</xsl:text>
                                          </xsl:attribute>
                                          <xsl:if test="$including-optional">
                                             <description>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </description>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <prop>
                                                <xsl:attribute name="name">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="value">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                      <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                      <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                      <xsl:text>protocol:uri</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </prop>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <link>
                                                <xsl:attribute name="href">
                                                   <xsl:text>uri-reference</xsl:text>
                                                </xsl:attribute>
                                                <xsl:attribute name="media-type">
                                                   <xsl:text>string</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <text>
                                                      <xsl:text>Text and (inline) markup</xsl:text>
                                                   </text>
                                                </xsl:if>
                                             </link>
                                          </xsl:if>
                                          <include-all/>
                                          <xsl:comment xmlns:uuid="java:java.util.UUID">
                                             <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                          </xsl:comment>
                                          <xsl:if test="$including-optional">
                                             <exclude-subject>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                               name="subject-uuid"
                                                               use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                <xsl:attribute name="type">
                                                   <xsl:text>token</xsl:text>
                                                </xsl:attribute>
                                                <xsl:if test="$including-optional">
                                                   <prop>
                                                      <xsl:attribute name="name">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="value">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                            <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                            <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                            <xsl:text>protocol:uri</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <remarks>
                                                            <p>Paragraphs and (block-level) markup contents.</p>
                                                         </remarks>
                                                      </xsl:if>
                                                   </prop>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <link>
                                                      <xsl:attribute name="href">
                                                         <xsl:text>uri-reference</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:attribute name="media-type">
                                                         <xsl:text>string</xsl:text>
                                                      </xsl:attribute>
                                                      <xsl:if test="$including-optional">
                                                         <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                      </xsl:if>
                                                      <xsl:if test="$including-optional">
                                                         <text>
                                                            <xsl:text>Text and (inline) markup</xsl:text>
                                                         </text>
                                                      </xsl:if>
                                                   </link>
                                                </xsl:if>
                                                <xsl:if test="$including-optional">
                                                   <remarks>
                                                      <p>Paragraphs and (block-level) markup contents.</p>
                                                   </remarks>
                                                </xsl:if>
                                             </exclude-subject>
                                          </xsl:if>
                                          <xsl:if test="$including-optional">
                                             <remarks>
                                                <p>Paragraphs and (block-level) markup contents.</p>
                                             </remarks>
                                          </xsl:if>
                                       </subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <identified-subject>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-placeholder-uuid"
                                                         use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                          <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                         name="subject-placeholder-uuid"
                                                         use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                          <subject>
                                             <xsl:attribute name="type">
                                                <xsl:text>token</xsl:text>
                                             </xsl:attribute>
                                             <xsl:if test="$including-optional">
                                                <description>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </description>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <prop>
                                                   <xsl:attribute name="name">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="value">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                         <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                         <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                         <xsl:text>protocol:uri</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </prop>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <link>
                                                   <xsl:attribute name="href">
                                                      <xsl:text>uri-reference</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:attribute name="media-type">
                                                      <xsl:text>string</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                         <xsl:text>token</xsl:text>
                                                      </xsl:attribute>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <text>
                                                         <xsl:text>Text and (inline) markup</xsl:text>
                                                      </text>
                                                   </xsl:if>
                                                </link>
                                             </xsl:if>
                                             <include-all/>
                                             <xsl:comment xmlns:uuid="java:java.util.UUID">
                                                <xsl:text disable-output-escaping="true"> &lt;include-subject&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;00000000-0000-4000-8000-000000000000&lt;/xsl:attribute&gt;&lt;xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="type"&gt;&lt;xsl:text xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:r="http://csrc.nist.gov/ns/random"&gt;token&lt;/xsl:text&gt;&lt;/xsl:attribute&gt;&lt;/include-subject&gt; </xsl:text>
                                             </xsl:comment>
                                             <xsl:if test="$including-optional">
                                                <exclude-subject>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                                                   <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                                                  name="subject-uuid"
                                                                  use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                                                   <xsl:attribute name="type">
                                                      <xsl:text>token</xsl:text>
                                                   </xsl:attribute>
                                                   <xsl:if test="$including-optional">
                                                      <prop>
                                                         <xsl:attribute name="name">
                                                            <xsl:text>token</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="value">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                                               <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                                               <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                                               <xsl:text>protocol:uri</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <remarks>
                                                               <p>Paragraphs and (block-level) markup contents.</p>
                                                            </remarks>
                                                         </xsl:if>
                                                      </prop>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <link>
                                                         <xsl:attribute name="href">
                                                            <xsl:text>uri-reference</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:attribute name="media-type">
                                                            <xsl:text>string</xsl:text>
                                                         </xsl:attribute>
                                                         <xsl:if test="$including-optional">
                                                            <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                                               <xsl:text>token</xsl:text>
                                                            </xsl:attribute>
                                                         </xsl:if>
                                                         <xsl:if test="$including-optional">
                                                            <text>
                                                               <xsl:text>Text and (inline) markup</xsl:text>
                                                            </text>
                                                         </xsl:if>
                                                      </link>
                                                   </xsl:if>
                                                   <xsl:if test="$including-optional">
                                                      <remarks>
                                                         <p>Paragraphs and (block-level) markup contents.</p>
                                                      </remarks>
                                                   </xsl:if>
                                                </exclude-subject>
                                             </xsl:if>
                                             <xsl:if test="$including-optional">
                                                <remarks>
                                                   <p>Paragraphs and (block-level) markup contents.</p>
                                                </remarks>
                                             </xsl:if>
                                          </subject>
                                       </identified-subject>
                                    </xsl:if>
                                    <xsl:if test="$including-optional">
                                       <remarks>
                                          <p>Paragraphs and (block-level) markup contents.</p>
                                       </remarks>
                                    </xsl:if>
                                 </related-task>
                              </xsl:if>
                              <xsl:if test="$including-optional">
                                 <remarks>
                                    <p>Paragraphs and (block-level) markup contents.</p>
                                 </remarks>
                              </xsl:if>
                           </related-response>
                        </xsl:if>
                        <xsl:if test="$including-optional">
                           <remarks>
                              <p>Paragraphs and (block-level) markup contents.</p>
                           </remarks>
                        </xsl:if>
                     </entry>
                  </risk-log>
               </xsl:if>
               <xsl:if test="$including-optional">
                  <related-observation>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="observation-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="observation-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                  </related-observation>
               </xsl:if>
            </risk>
         </xsl:if>
         <poam-item>
            <xsl:if test="$including-optional">
               <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                  <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                  <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
               </xsl:attribute>
            </xsl:if>
            <title>
               <xsl:text>Text and (inline) markup</xsl:text>
            </title>
            <description>
               <p>Paragraphs and (block-level) markup contents.</p>
            </description>
            <xsl:if test="$including-optional">
               <prop>
                  <xsl:attribute name="name">
                     <xsl:text>token</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="value">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                        <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                        <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                        <xsl:text>protocol:uri</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <remarks>
                        <p>Paragraphs and (block-level) markup contents.</p>
                     </remarks>
                  </xsl:if>
               </prop>
            </xsl:if>
            <xsl:if test="$including-optional">
               <link>
                  <xsl:attribute name="href">
                     <xsl:text>uri-reference</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="media-type">
                     <xsl:text>string</xsl:text>
                  </xsl:attribute>
                  <xsl:if test="$including-optional">
                     <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="$including-optional">
                     <text>
                        <xsl:text>Text and (inline) markup</xsl:text>
                     </text>
                  </xsl:if>
               </link>
            </xsl:if>
            <xsl:if test="$including-optional">
               <origin>
                  <actor>
                     <xsl:attribute name="type">
                        <xsl:text>token</xsl:text>
                     </xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="actor-uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="actor-uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <xsl:attribute xmlns:uuid="java:java.util.UUID" name="role-id">
                           <xsl:text>token</xsl:text>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <link>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <text>
                                 <xsl:text>Text and (inline) markup</xsl:text>
                              </text>
                           </xsl:if>
                        </link>
                     </xsl:if>
                  </actor>
               </origin>
            </xsl:if>
            <xsl:if test="$including-optional">
               <related-observation>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="observation-uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="observation-uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               </related-observation>
            </xsl:if>
            <xsl:if test="$including-optional">
               <associated-risk>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="risk-uuid"
                                 use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                  <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                 name="risk-uuid"
                                 use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
               </associated-risk>
            </xsl:if>
            <xsl:if test="$including-optional">
               <remarks>
                  <p>Paragraphs and (block-level) markup contents.</p>
               </remarks>
            </xsl:if>
         </poam-item>
         <xsl:if test="$including-optional">
            <back-matter>
               <xsl:if test="$including-optional">
                  <resource>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID() }</xsl:attribute>
                     <xsl:attribute xmlns:uuid="java:java.util.UUID"
                                    name="uuid"
                                    use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:attribute>
                     <xsl:if test="$including-optional">
                        <title>
                           <xsl:text>Text and (inline) markup</xsl:text>
                        </title>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <description>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </description>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <prop>
                           <xsl:attribute name="name">
                              <xsl:text>token</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="value">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                 <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                 <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                 <xsl:text>token</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <remarks>
                                 <p>Paragraphs and (block-level) markup contents.</p>
                              </remarks>
                           </xsl:if>
                        </prop>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <document-id>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="scheme">
                                 <xsl:text>protocol:uri</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>string</xsl:text>
                        </document-id>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <citation>
                           <text>
                              <xsl:text>Text and (inline) markup</xsl:text>
                           </text>
                           <xsl:if test="$including-optional">
                              <prop>
                                 <xsl:attribute name="name">
                                    <xsl:text>token</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="value">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="uuid">
                                       <xsl:sequence use-when="function-available('uuid:randomUUID')">{ uuid:randomUUID()
                    }</xsl:sequence>
                                       <xsl:sequence use-when="not(function-available('uuid:randomUUID'))">00000000-0000-4000-8000-000000000000</xsl:sequence>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="ns">
                                       <xsl:text>protocol:uri</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="class">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <remarks>
                                       <p>Paragraphs and (block-level) markup contents.</p>
                                    </remarks>
                                 </xsl:if>
                              </prop>
                           </xsl:if>
                           <xsl:if test="$including-optional">
                              <link>
                                 <xsl:attribute name="href">
                                    <xsl:text>uri-reference</xsl:text>
                                 </xsl:attribute>
                                 <xsl:attribute name="media-type">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:if test="$including-optional">
                                    <xsl:attribute xmlns:uuid="java:java.util.UUID" name="rel">
                                       <xsl:text>token</xsl:text>
                                    </xsl:attribute>
                                 </xsl:if>
                                 <xsl:if test="$including-optional">
                                    <text>
                                       <xsl:text>Text and (inline) markup</xsl:text>
                                    </text>
                                 </xsl:if>
                              </link>
                           </xsl:if>
                        </citation>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <rlink>
                           <xsl:attribute name="href">
                              <xsl:text>uri-reference</xsl:text>
                           </xsl:attribute>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <hash>
                                 <xsl:attribute name="algorithm">
                                    <xsl:text>string</xsl:text>
                                 </xsl:attribute>
                                 <xsl:text>string</xsl:text>
                              </hash>
                           </xsl:if>
                        </rlink>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <base64>
                           <xsl:attribute name="media-type">
                              <xsl:text>string</xsl:text>
                           </xsl:attribute>
                           <xsl:if test="$including-optional">
                              <xsl:attribute xmlns:uuid="java:java.util.UUID" name="filename">
                                 <xsl:text>uri-reference</xsl:text>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:text>base64Binary</xsl:text>
                        </base64>
                     </xsl:if>
                     <xsl:if test="$including-optional">
                        <remarks>
                           <p>Paragraphs and (block-level) markup contents.</p>
                        </remarks>
                     </xsl:if>
                  </resource>
               </xsl:if>
            </back-matter>
         </xsl:if>
      </plan-of-action-and-milestones>
   </xsl:template>
</xsl:stylesheet>
